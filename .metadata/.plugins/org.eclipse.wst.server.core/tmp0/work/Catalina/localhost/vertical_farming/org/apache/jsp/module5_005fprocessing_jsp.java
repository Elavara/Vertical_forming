/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2025-02-12 08:40:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class module5_005fprocessing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Harvesting Calculation Data</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-image: url('clv.jpg');\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 90%;\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            background-color: rgba(255, 255, 255, 0.8);\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            overflow-x: auto; \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: black;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            background-color: rgba(255, 255, 255, 0.7);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 14px 18px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            word-wrap: break-word;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background: linear-gradient(135deg, rgba(111, 159, 255, 0.8), rgba(76, 175, 80, 0.8));\r\n");
      out.write("            color: white;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th:hover {\r\n");
      out.write("            background-color: rgba(62, 142, 65, 0.8);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td {\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:nth-child(even) {\r\n");
      out.write("            background-color: rgba(242, 242, 242, 0.5);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background-color: rgba(224, 247, 250, 0.6);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            bottom: 20px;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            background-color: rgba(76, 175, 80, 0.8);\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button:hover {\r\n");
      out.write("            background-color: rgba(62, 142, 65, 0.8);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            table, thead, tbody, th, td, tr {\r\n");
      out.write("                display: block;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            th {\r\n");
      out.write("                display: none;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            tr {\r\n");
      out.write("                margin-bottom: 20px;\r\n");
      out.write("                box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("                border-radius: 10px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            td {\r\n");
      out.write("                position: relative;\r\n");
      out.write("                padding-left: 50%;\r\n");
      out.write("                text-align: right;\r\n");
      out.write("                background-color: rgba(255, 255, 255, 0.8);\r\n");
      out.write("                border-bottom: 1px solid #ddd;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            td:before {\r\n");
      out.write("                content: attr(data-label);\r\n");
      out.write("                position: absolute;\r\n");
      out.write("                left: 0;\r\n");
      out.write("                width: 45%;\r\n");
      out.write("                padding-left: 15px;\r\n");
      out.write("                text-align: left;\r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("                text-transform: uppercase;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            tr:hover {\r\n");
      out.write("                background-color: rgba(255, 255, 255, 0.8); \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 480px) {\r\n");
      out.write("            td {\r\n");
      out.write("                font-size: 0.9em;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <h1 style=\"color: black; text-transform: uppercase;\">Harvesting Data processing</h1>\r\n");
      out.write("    <table id=\"myTable\">\r\n");
      out.write("        <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th onclick=\"sortTable(0)\">S.No</th>\r\n");
      out.write("                <th onclick=\"sortTable(1)\">Employee ID</th>\r\n");
      out.write("                <th onclick=\"sortTable(2)\">Crop</th>\r\n");
      out.write("                <th onclick=\"sortTable(3)\">Water Usage</th>\r\n");
      out.write("                <th onclick=\"sortTable(4)\">Total Nutrients</th>\r\n");
      out.write("                <th onclick=\"sortTable(5)\">Harvest Efficiency</th>\r\n");
      out.write("                <th onclick=\"sortTable(6)\">Space Utilization</th>\r\n");
      out.write("                <th onclick=\"sortTable(7)\">Yield Comparison</th>\r\n");
      out.write("                <th onclick=\"sortTable(8)\">Sunlight Efficiency</th>\r\n");
      out.write("                <th onclick=\"sortTable(9)\">Total Weight</th>\r\n");
      out.write("                <th>Action</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("            ");

                String jdbcUrl = "jdbc:mysql://localhost:3306/vertical_farming"; 
                String dbUser = "root"; 
                String dbPassword = "root"; 

                Connection conn = null;
                Statement stmt = null;
                ResultSet rs = null;

                try {
                    Class.forName("com.mysql.jdbc.Driver"); 
                    conn = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);
                    stmt = conn.createStatement();
                    String sql = "SELECT * FROM module4_harvesting_calculation"; 
                    rs = stmt.executeQuery(sql);

                    while (rs.next()) {
                        
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td data-label=\"S.No\">");
      out.print( rs.getInt("si_no") );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Employee ID\">");
      out.print( rs.getString("employee_id") );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Crop\">");
      out.print( rs.getString("crop") != null ? rs.getString("crop") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Water Usage\">");
      out.print( rs.getString("water_usage") != null ? rs.getString("water_usage") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Total Nutrients\">");
      out.print( rs.getString("total_nutrients") != null ? rs.getString("total_nutrients") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Harvest Efficiency\">");
      out.print( rs.getString("harvest_efficiency") != null ? rs.getString("harvest_efficiency") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Space Utilization\">");
      out.print( rs.getString("space_utilization") != null ? rs.getString("space_utilization") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Yield Comparison\">");
      out.print( rs.getString("yield_comparison") != null ? rs.getString("yield_comparison") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Sunlight Efficiency\">");
      out.print( rs.getString("sunlight_efficiency") != null ? rs.getString("sunlight_efficiency") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Total Weight\">");
      out.print( rs.getString("total_weight") != null ? rs.getString("total_weight") : "N/A" );
      out.write("</td>\r\n");
      out.write("                            <td data-label=\"Action\">\r\n");
      out.write("                                <form action=\"module5_calculation.jsp\" method=\"post\" style=\"display:inline;\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"si_no\" value=\"");
      out.print( rs.getInt("si_no") );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"employee_id\" value=\"");
      out.print( rs.getString("employee_id") );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"crop\" value=\"");
      out.print( rs.getString("crop") != null ? rs.getString("crop") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"water_usage\" value=\"");
      out.print( rs.getString("water_usage") != null ? rs.getString("water_usage") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"total_nutrients\" value=\"");
      out.print( rs.getString("total_nutrients") != null ? rs.getString("total_nutrients") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"harvest_efficiency\" value=\"");
      out.print( rs.getString("harvest_efficiency") != null ? rs.getString("harvest_efficiency") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"space_utilization\" value=\"");
      out.print( rs.getString("space_utilization") != null ? rs.getString("space_utilization") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"yield_comparison\" value=\"");
      out.print( rs.getString("yield_comparison") != null ? rs.getString("yield_comparison") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"sunlight_efficiency\" value=\"");
      out.print( rs.getString("sunlight_efficiency") != null ? rs.getString("sunlight_efficiency") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"total_weight\" value=\"");
      out.print( rs.getString("total_weight") != null ? rs.getString("total_weight") : "N/A" );
      out.write("\">\r\n");
      out.write("                                    <button type=\"submit\" style=\"background-color: rgba(76, 175, 80, 0.8); color: white; border: none; border-radius: 5px; cursor: pointer;\">Calculate</button>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        ");

                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                } finally {
                    if (rs != null) try { rs.close(); } catch (SQLException e) {}
                    if (stmt != null) try { stmt.close(); } catch (SQLException e) {}
                    if (conn != null) try { conn.close(); } catch (SQLException e) {}
                }
            
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("<button class=\"back-button\" onclick=\"window.location.href='module5_testing_homepage.html'\">Go Back</button>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function sortTable(columnIndex) {\r\n");
      out.write("        var table = document.getElementById(\"myTable\");\r\n");
      out.write("        var rows = Array.from(table.rows).slice(1);\r\n");
      out.write("        var isAscending = table.querySelector(\"th:nth-child(\" + (columnIndex + 1) + \")\").classList.toggle(\"asc\");\r\n");
      out.write("\r\n");
      out.write("        rows.sort((a, b) => {\r\n");
      out.write("            var cellA = a.cells[columnIndex].innerText;\r\n");
      out.write("            var cellB = b.cells[columnIndex].innerText;\r\n");
      out.write("\r\n");
      out.write("            if (isNaN(cellA) || isNaN(cellB)) {\r\n");
      out.write("                return cellA.localeCompare(cellB) * (isAscending ? 1 : -1);\r\n");
      out.write("            } else {\r\n");
      out.write("                return (parseFloat(cellA) - parseFloat(cellB)) * (isAscending ? 1 : -1);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        rows.forEach(row => table.appendChild(row));\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
