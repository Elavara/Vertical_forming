/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2025-02-03 05:15:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.sql.*;
import dbconnection.Dbconn;

public final class module2_005fadmin_005fstatus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dbconnection.Dbconn");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("    <title>View LogStatus - Admin</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ\" crossorigin=\"anonymous\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        @import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600);\r\n");
      out.write("\r\n");
      out.write("        *, *:before, *:after {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            background: url(\"leaf.jpg\") no-repeat center center fixed;\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            font-family: 'Open Sans', sans-serif;\r\n");
      out.write("            color: #fff; /* Ensure text is visible on dark backgrounds */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            background: #012B39;\r\n");
      out.write("            border-radius: 0.25em;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin: 1em;\r\n");
      out.write("            margin-left: auto;  \r\n");
      out.write("            margin-right: auto; \r\n");
      out.write("            margin-top: 1em; \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            border-bottom: 1px solid #364043;\r\n");
      out.write("            color: #E2B842;\r\n");
      out.write("            font-size: 0.85em;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            padding: 0.5em 1em;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            font-weight: 400;\r\n");
      out.write("            padding: 0.65em 1em;  \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .disabled td {\r\n");
      out.write("            color: #4F5F64;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tbody tr {\r\n");
      out.write("            transition: background 0.25s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tbody tr:hover {\r\n");
      out.write("            background: #014055;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            padding-top: 80px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-disabled {\r\n");
      out.write("            pointer-events: none;\r\n");
      out.write("            opacity: 0.6;\r\n");
      out.write("            background-color: black; \r\n");
      out.write("            border-color: black; \r\n");
      out.write("            color: white; \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            bottom: 20px;\r\n");
      out.write("            left: 50%;\r\n");
      out.write("            transform: translateX(-50%);\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("        function disableButton(buttonId) {\r\n");
      out.write("            var button = document.getElementById(buttonId);\r\n");
      out.write("            button.classList.add('btn-disabled');\r\n");
      out.write("            button.textContent = 'Processing...';\r\n");
      out.write("            button.disabled = true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        window.onload = function() {\r\n");
      out.write("            var acceptButtons = document.querySelectorAll('.btn-success');\r\n");
      out.write("            acceptButtons.forEach(function(button) {\r\n");
      out.write("                if (button.classList.contains('btn-disabled')) {\r\n");
      out.write("                    button.disabled = true;\r\n");
      out.write("                    button.classList.add('btn-disabled');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1 style=\"color: black;\"> INVENTORY EMPLOYEE DETAILS AND STATUS</h1>\r\n");
      out.write("<table>\r\n");

    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        // Establish connection
        conn = Dbconn.getconnection();
        
        String qry = "SELECT * FROM module_2_pro_availability";
        ps = conn.prepareStatement(qry);
        rs = ps.executeQuery();

      out.write("\r\n");
      out.write("    <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>ID</th>\r\n");
      out.write("            <th>Name</th>\r\n");
      out.write("            <th>Email</th>\r\n");
      out.write("            <th>Phone</th>\r\n");
      out.write("            <th>Address</th>\r\n");
      out.write("            <th>Password</th>\r\n");
      out.write("            <th>Status</th>\r\n");
      out.write("            <th>Action</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    ");

        while (rs.next()) {
    
      out.write("\r\n");
      out.write("        <tr style=\"text-align: center;\">\r\n");
      out.write("            <td>");
      out.print( rs.getString("id") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("name") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("email") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("phone_number") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("address") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("password") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("status") );
      out.write("</td>\r\n");
      out.write("            ");

            if (rs.getString("status").equalsIgnoreCase("Accepted")) {
            
      out.write("\r\n");
      out.write("                <td>\r\n");
      out.write("                    <a href=\"admin_approval_proavailability_mail.jsp?user_name=");
      out.print( rs.getString("name") );
      out.write("&email=");
      out.print( rs.getString("email") );
      out.write("&password=");
      out.print( rs.getString("password") );
      out.write("\" \r\n");
      out.write("                       id=\"accept_");
      out.print( rs.getString("email") );
      out.write("\" class=\"btn btn-dark btn-disabled\" style=\"pointer-events: none; text-decoration: none; color: black;\">Accept</a>\r\n");
      out.write("                    <br><br>\r\n");
      out.write("                    <a href=\"admin_reject_proavailability_mail.jsp?name=");
      out.print( rs.getString("name") );
      out.write("&email=");
      out.print( rs.getString("email") );
      out.write("\" class=\"btn btn-danger\">Reject</a>\r\n");
      out.write("                </td>\r\n");
      out.write("            ");

            } else {
            
      out.write("\r\n");
      out.write("                <td>\r\n");
      out.write("                    <a id=\"accept_");
      out.print( rs.getString("email") );
      out.write("\" href=\"admin_approval_proavailability_mail.jsp?user_name=");
      out.print( rs.getString("name") );
      out.write("&email=");
      out.print( rs.getString("email") );
      out.write("&password=");
      out.print( rs.getString("password") );
      out.write("\" \r\n");
      out.write("                       class=\"btn btn-success\" onclick=\"disableButton('accept_");
      out.print( rs.getString("email") );
      out.write("');\">Accept</a>\r\n");
      out.write("                    <br><br>\r\n");
      out.write("                    <a href=\"admin_reject_proavailability_mail.jsp?name=");
      out.print( rs.getString("name") );
      out.write("&email=");
      out.print( rs.getString("email") );
      out.write("\" class=\"btn btn-danger\">Reject</a>\r\n");
      out.write("                </td>\r\n");
      out.write("            ");

            }
            
      out.write("\r\n");
      out.write("        </tr>\r\n");
      out.write("    ");

        }
    } catch (SQLException e) {
        out.println("SQL Error: " + e.getMessage());
    } catch (Exception e) {
        out.println("Error: " + e.getMessage());
    } finally {
        // Clean up resources
        try {
            if (rs != null) rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            if (ps != null) ps.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("</table>\r\n");
      out.write("<br><center><a href=\"employeedropdown.html\" class=\"btn btn-primary\">Go Back</a></center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
